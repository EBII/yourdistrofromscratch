 	echo $PKGURL | grep freetuxtv && LC_CONFIGURE_OPTS="--with-gtk=3.0"
  	echo $PKGURL | grep xslt && [ -e $DIBAB_PREFIX/$MODULE/include/libxml2/libxml ] && [ ! -e $DIBAB_PREFIX/$MODULE/include/libxml ] && ln -s $DIBAB_PREFIX/$MODULE/include/libxml2/libxml $DIBAB_PREFIX/$MODULE/include
        echo $PKGURL | grep wxPython-src-2 && LC_CONFIGURE_OPTS="--with-gtk=2 --with-opengl --enable-unicode --enable-graphics_ctx --disable-optimize --enable-mediactrl --with-regex=sys --with-libpng=sys --with-libxpm=sys --with-libjpeg=sys --with-libtiff=sys --disable-precomp-headers --with-sdl"
        echo $PKGURL | grep guile && LC_CONFIGURE_OPTS="--disable-static  --disable-error-on-warning"
        echo $PKGURL | grep warsow && export CFLAGS="$CFLAGS -I""$HOME/$CARCH/include/freetype "
        echo $PKGURL | grep efl-1 && unset CXX
  	echo $PKGURL | grep wxsvg && LC_CONFIGURE_OPTS="--disable-static --enable-static=no"
	echo $PKGURL | grep poppler && LC_CONFIGURE_OPTS=" --enable-cairo-output --enable-xpdf-headers --enable-libjpeg --enable-zlib --enable-poppler-qt4 --enable-poppler-glib"
	echo $PKGURL | grep glfw-3 && LC_CONFIGURE_OPTS="-DBUILD_SHARED_LIBS=ON"
	echo $PKGURL | grep gtk+-3 && LC_CONFIGURE_OPTS="--disable-wayland-backend --enable-x11-backend   "
	echo $PKGURL | grep portaudio && LC_CONFIGURE_OPTS="--with-alsa "
	echo $PKGURL | grep GConf && LC_CONFIGURE_OPTS="--disable-orbit --disable-static "
	echo $PKGURL | grep ghostscript && LC_CONFIGURE_OPTS="--enable-dynamic --with-ijs --with-jbig2dec --with-omni --with-x --with-drivers=ALL --with-fontpath=/usr/share/fonts/Type1:/usr/share/fonts --enable-fontconfig --enable-freetype --enable-openjpeg --without-luratech --without-omni --with-system-libtiff --with-libpaper --disable-compile-inits"
	echo $PKGURL | grep nspr && [ "$CARCH" = "x86_64" ] && LC_CONFIGURE_OPTS="--enable-64bit"
	echo $PKGURL | grep wine && [ "$CARCH" = "x86_64" ] && LC_CONFIGURE_OPTS="--enable-win64"
	echo $PKGURL | grep audacity && LC_CONFIGURE_OPTS="--without-ffmpeg  --without-portmixer --enable-unicode" && export WX_CONFIG=$HOME/ydfs/src/wxGTK-2.8.12/wx-config
	echo $PKGURL | grep gst-ffmpeg && LC_CONFIGURE_OPTS="--with-system-ffmpeg"
	echo $PKGURL | grep tcl8 && LC_CONFIGURE_OPTS="--enable-shared --enable-threads --enable-dll-unloading --disable-rpath"
	echo $PKGURL | grep tuxracer && LC_CONFIGURE_OPTS="--with-tcl=$DIBAB_PREFIX/$CARCH/lib"
	echo $PKGURL | grep ntfs-3g && LC_CONFIGURE_OPTS="--enable-really-static --sbindir=$DIBAB_PREFIX/$MODULE/sbin --exec-prefix=$DIBAB_PREFIX/$MODULE"
	echo $PKGURL | grep bluez && LC_CONFIGURE_OPTS="--exec-prefix=$DIBAB_PREFIX/$MODULE"
	echo $PKGURL | grep libav && LC_CONFIGURE_OPTS="--disable-static --enable-shared"
	echo $PKGURL | grep db-6 && LC_CONFIGURE_OPTS="--enable-compat185 --enable-dbm --disable-static --enable-cxx"
	echo $PKGURL | grep pkg-config && [ "$CARCH" != "arm" ] && LC_CONFIGURE_OPTS="--with-internal-glib"
	echo $PKGURL | grep ffmpeg-2 && export LDFLAGS="$LDFLAGS -fPIC" && export CFLAGS="$CFLAGS -fPIC" && LC_CONFIGURE_OPTS=" --disable-debug --disable-static --enable-avresample --enable-dxva2 --enable-fontconfig --enable-gnutls --enable-gpl --enable-libass --enable-libbluray --enable-libfreetype --enable-libmodplug --enable-libmp3lame --enable-libtheora --enable-libvorbis --enable-libvpx --enable-libx264 --enable-libxvid --enable-pic --enable-postproc --enable-runtime-cpudetect --enable-shared --enable-vdpau --enable-version3 --enable-x11grab"
	echo $PKGURL | grep openssh && LC_CONFIGURE_OPTS="--without-openssl-header-check --with-privsep-path=$DIBAB_PREFIX"
	echo $PKGURL | grep gdk-pixbuf && LC_CONFIGURE_OPTS="--with-x11"
	echo $PKGURL | grep clamav && LC_CONFIGURE_OPTS="--with-user=root --with-group=root "
	echo $PKGURL | grep vlc- && LC_CONFIGURE_OPTS="--enable-live555 --disable-lua --enable-run-as-root --disable-silent-rules --enable-realrtsp"
	echo $PKGURL | grep cmake && LC_CONFIGURE_OPTS="--system-curl"
	echo $PKGURL | grep openttd && LC_CONFIGURE_OPTS="--without-liblzo2"
	echo $PKGURL | grep curl-7 && LC_CONFIGURE_OPTS="--with-ssl --without-gnutls"
	echo $PKGURL | grep util-linux && LC_CONFIGURE_OPTS="--disable-makeinstall-chown"
	echo $PKGURL | grep kino && export CFLAGS=" -I/$HOME/ydfs/src/kino-1.3.4/ffmpeg " && echo "CFLAGS is $CFLAGS" # && LC_CONFIGURE_OPTS="--disable-ffmpeg"
	echo $PKGURL | grep fftw && LC_CONFIGURE_OPTS="--enable-float --enable-shared --enable-threads"
	echo $PKGURL | grep gtk+-2.24 && export CFLAGS="$CFLAGS -Wl,-rpath-link,$HOME/ydfs/build-x86/gtk+-2.24.9/gdk/.libs/"
	echo $PKGURL | grep udev-164 && export CFLAGS="$CFLAGS -Wl,-rpath-link,$HOME/ydfs/build-x86/udev-164/libudev/.libs/"
	echo $PKGURL | grep gst-plugins-base-0.10.35 && export CFLAGS="$CFLAGS -Wl,-rpath-link,$HOME/ydfs/build-x86/gst-plugins-base-0.10.35/gst-libs/gst/interfaces/.libs/"
	echo $PKGURL | grep qt-everywhere-opensource-src-5 && LC_CONFIGURE_OPTS="-icu -confirm-license -opensource -system-sqlite -openssl-linked -nomake examples -no-rpath -reduce-relocations -v " && export QMAKE_LDFLAGS="$CFLAGS" && export QMAKE_CFLAGS="$CFLAGS"
	echo $PKGURL | grep qt-everywhere-opensource-src-4 && LC_CONFIGURE_OPTS="-icu -release -webkit -javascript-jit  -no-qt3support -openssl -opengl -v -make libs -opensource -dbus-linked -openssl-linked -system-sqlite -no-phonon -no-phonon-backend -no-nis -no-openvg -nomake demos -nomake examples-optimized-qmake  -make tools -confirm-license" && unset QTDIR && export QMAKESPEC=linux-g++ && export QMAKE_CFLAGS="$CFLAGS" && export LDFLAGS="$LDFLAGS -Wl,-rpath-link,$HOME/ydfs/build-$CARCH/`basename $PKGURL | cut -d'.' -f1,2,3`/lib"
	echo $PKGURL | grep mysql-5.6 && LC_CONFIGURE_OPTS="-DENABLED_LOCAL_INFILE=ON -DWITH_SSL=$HOME/$CARCH "
  echo $PKGURL | grep grub && unset CFLAGS && unset LDFLAGS #export FIRSTENV="OK"
  echo $PKGURL | grep warzone && export CLEARENV="OK"
  echo $PKGURL | grep abe_1.1 && export LC_CONFIGURE_OPTS="--with-data-dir=$HOME/$MODULE/share/abe" 
  echo $PKGURL | grep fluidsynth && export LC_CONFIGURE_OPTS="-Denable-ladspa=ON"
  echo $PKGURL | grep minetest && export LDFLAGS="$LDFLAGS -lIrrlicht" export LC_CONFIGURE_OPTS="-DBUILD_SERVER=0 -DIRRLICHT_INCLUDE_DIR=$HOME/include/irrlicht -DIRRLICHT_LIBRARY=$HOME/$CARCH/lib"
  echo $PKGURL | grep dolphin && export LC_CONFIGURE_OPTS=" -DDISABLE_WX=ON"
  echo $PKGURL | grep dolphin && export CXXFLAGS="$CXXFLAGS "$( pkg-config --cflags gtk+-2.0)
  echo $PKGURL | grep jack- && export LC_CONFIGURE_OPTS="--alsa"
  echo $PKGURL | grep xwax && export LC_CONFIGURE_OPTS="--enable-alsa"
  echo $PKGURL | grep xbmc && export LC_CONFIGURE_OPTS="--disable-debug"
  echo $PKGURL | grep celestia && export LC_CONFIGURE_OPTS="--with-gtk -with-lua=$HOME/$CARCH  --disable-rpath --with-lua"
  echo $PKGURL | grep gnome-system-tools && export LC_CONFIGURE_OPTS="--disable-nautilus --disable-scrollkeeper --disable-static --disable-services " && export LIBS="-lm -lgthread-2.0"
 	echo $PKGURL | grep armagetronad && LC_CONFIGURE_OPTS="--enable-uninstall=no"
  	echo $PKGURL | grep plib && export CXX="g++ -fPIC"
  	echo $PKGURL | grep jasper && export LDFLAGS="$LDFLAGS -fPIC" && export CFLAGS="$CFLAGS -fPIC"
  	echo $PKGURL | grep SDL_Pango && export LDFLAGS="$LDFLAGS -fPIC" && export CFLAGS="$CFLAGS -fPIC"
  	echo $PKGURL | grep fftw && export LDFLAGS="$LDFLAGS -fPIC" && export CFLAGS="$CFLAGS -fPIC"
  	echo $PKGURL | grep json-c && export CFLAGS="$CFLAGS -Wno-error"
  	echo $PKGURL | grep gcompris && LC_CONFIGURE_OPTS="--enable-sdlmixer"
  	echo $PKGURL | grep squeak-vm && LC_CONFIGURE_OPTS="--without-quartz --with-x --enable-mpg-mmx"
  	echo $PKGURL | grep inkscape && LC_CONFIGURE_OPTS="--disable-strict-build"
  	echo $PKGURL | grep libomxil-bellagio && LC_CONFIGURE_OPTS="-disable-static"
  	echo $PKGURL | grep e2fsprogs && LC_CONFIGURE_OPTS="--disable-libblkid --disable-libuuid --disable-uuidd --disable-fsck"
  	echo $PKGURL | grep Alien-SDL && LC_CONFIGURE_OPTS="--with-sdl-config"
	echo $PKGURL | grep gobject-introspection && LC_CONFIGURE_OPTS="--disable-tests" && [ "$CARCH" == "arm" ] && export PATH=$HOME/$CARCH/bin/:$PATH
	echo $PKGURL | grep lightdm && LC_CONFIGURE_OPTS="--with-greeter-user=lightdm --with-greeter-session=lightdm-gtk-greeter --disable-static --disable-tests"
	echo $PKGURL | grep dossizola && LC_CONFIGURE_OPTS="--datadir=$DIBAB_PREFIX/$MODULE"
	echo $PKGURL | grep pcmanfm && LC_CONFIGURE_OPTS="--enable-debug"
	echo $PKGURL | grep openldap && LC_CONFIGURE_OPTS="--with-tls=no  --disable-static  --enable-dynamic  --disable-debug "
	#echo $PKGURL | grep libfm && LC_CONFIGURE_OPTS="--enable-udisks --enable-debug"
	echo $PKGURL | grep libfm && LC_CONFIGURE_OPTS="--enable-debug"
	echo $PKGURL | grep wayland && LC_CONFIGURE_OPTS="--disable-documentation"
	echo $PKGURL | grep pulseaudio && LC_CONFIGURE_OPTS="--with-udev-rules-dir=$DIBAB_PREFIX/$MODULE/lib/udev/rules.d"
	echo $PKGURL | grep colord && LC_CONFIGURE_OPTS="--disable-systemd-login --with-udevrulesdir=$DIBAB_PREFIX/$MODULE/lib/udev/rules.d"
	echo $PKGURL | grep glib-2 && LC_CONFIGURE_OPTS="--enable-debug" # Debug pcmanfm
	echo $PKGURL | grep evince && LC_CONFIGURE_OPTS="--disable-nautilus"
	echo $PKGURL | grep gdb && LC_CONFIGURE_OPTS="--with-system-readline --disable-nls"
	echo $PKGURL | grep xkeyboard-config && LC_CONFIGURE_OPTS="--with-xkb-rules-symlink=xorg"
	echo $PKGURL | grep ModemManager && LC_CONFIGURE_OPTS="--with-udev-base-dir=$DIBAB_PREFIX/$MODULE/lib/udev"
	echo $PKGURL | grep NetworkManager && LC_CONFIGURE_OPTS="--enable-more-warnings --with-udev-dir=$DIBAB_PREFIX/$MODULE/lib/udev --with-dhcpcd=$DIBAB_PREFIX/$MODULE/sbin/dhcpcd"
	echo $PKGURL | grep network-manager-applet-0.9 && LC_CONFIGURE_OPTS="--enable-more-warnings --with-gtkver=2 --disable-migration"
	echo $PKGURL | grep alsa-utils && LC_CONFIGURE_OPTS="--with-curses=ncursesw --with-udev-rules-dir=$DIBAB_PREFIX/$MODULE/lib/udev/rules.d --with-alsa-prefix=$DIBAB_PREFIX/$MODULE/lib --with-alsa-inc-prefix=$DIBAB_PREFIX/$MODULE/include --with-asound-state-dir=$HOME/$CARCH/lib/alsa/var"
	echo $PKGURL | grep foomatic-db-engine && export LIBDIR=$DIBAB_PREFIX/$MODULE/share/foomatic 
	echo $PKGURL | grep foomatic-db-current && LC_CONFIGURE_OPTS="--disable-gzip-ppds"
	echo $PKGURL | grep foomatic-filters && export PPR=$DIBAB_PREFIX/$MODULE/lib/ppr && export PPR_INTERFACES=$DIBAB_PREFIX/$MODULE/lib/ppr/interfaces && export PPR_LIB=$DIBAB_PREFIX/$MODULE/lib/ppr/lib
	echo $PKGURL | grep foomatic-db-engine && LC_CONFIGURE_OPTS="--sysconfdir=$DIBAB_PREFIX/$MODULE/etc"
	echo $PKGURL | grep LVM && LC_CONFIGURE_OPTS="--with-default-system-dir=$DIBAB_PREFIX/$MODULE/etc/ --with-confdir=$DIBAB_PREFIX/$MODULE/etc/lvm --enable-pkgconfig"
	echo $PKGURL | grep Python-2 && LC_CONFIGURE_OPTS="--with-system-expat --enable-shared --with-ssl " #--enable-unicode=ucs4
	echo $PKGURL | grep fltk && LC_CONFIGURE_OPTS="--enable-shared" 
	echo $PKGURL | grep Python-3 && LC_CONFIGURE_OPTS=" --enable-shared --with-threads --with-computed-gotos --enable-ipv6 --with-system-expat --with-dbmliborder=gdbm:ndbm --with-system-ffi --with-system-libmpdec --without-ensurepip"
	echo $PKGURL | grep mpeg2dec && LC_CONFIGURE_OPTS="--enable-shared"
	echo $PKGURL | grep lame && LC_CONFIGURE_OPTS="--enable-nasm --enable-shared"
	echo $PKGURL | grep libvpx && LC_CONFIGURE_OPTS="--enable-pic --enable-shared --disable-unit-tests"
	echo $PKGURL | grep lirc && LC_CONFIGURE_OPTS="--enable-sandboxed --with-driver=userspace --with-transmitter"
	echo $PKGURL | grep gltron && LC_CONFIGURE_OPTS="--disable-warn"
	echo $PKGURL | grep sudo- && LC_CONFIGURE_OPTS="--with-timedir=/tmp --sysconfdir=$DIBAB_PREFIX/$MODULE/etc/sudo"
	echo $PKGURL | grep midori && LC_CONFIGURE_OPTS="--enable-gtk3"
	echo $PKGURL | grep qjackctl && LC_CONFIGURE_OPTS="--with-qt4=$HOME/$CARCH"
	echo $PKGURL | grep rosegarden && LC_CONFIGURE_OPTS="--with-qtdir=$HOME/$CARCH"
	echo $PKGURL | grep dhcpcd && LC_CONFIGURE_OPTS="--dbdir=$DIBAB_PREFIX/$MODULE/var/run"
	echo $PKGURL | grep avahi && LC_CONFIGURE_OPTS="--disable-manpages --disable-qt3 --disable-qt5  --disable-static  --disable-mono   --disable-libdaemon  --disable-monodoc    --disable-python     --disable-gtk3 --disable-gdbm --disable-gtk  --disable-pygtk --enable-core-docs   --with-distro=none "
	

# RULES AFTER BUILDOK

	unset PREFIX
	echo $PKGURL | grep gstreamer && unset SHELL
	echo $PKGURL | grep gstreamer && unset CONFIG_SHELL
	echo $PKGURL | grep foomatic-db-engine && unset LIBDIR
	echo $PKGURL | grep gutenprint && unset DESTDIR
	echo $PKGURL | grep glibc && unset MAKE_INSTALL
	echo $PKGURL | grep mysql-5 && install -d  $MYPREFIX/include/mysql && cp $MYPREFIX/include/errmsg.h $MYPREFIX/include/mysql/ && cp $MYPREFIX/include/mysql.h  $MYPREFIX/include/mysql/
	echo $PKGURL | grep Linux-PAM && [ ! -e $HOME/$MODULE/include/security ] && ln -s $HOME/$MODULE/include/ $HOME/$MODULE/include/security
	echo $PKGURL | grep netpbm && [ ! -e $DIBAB_PREFIX/$MODULE/bin/pnmtops ] && cd $HOME/ydfs/src/netpbm* && make package pkgdir=/tmp/netpbm && cp -fR /tmp/netpbm/* $DIBAB_PREFIX/$MODULE/
	echo $PKGURL | grep httpd && LC_CONFIGURE_OPTS="--enable-so"
	echo $PKGURL | grep wxGTK && LC_CONFIGURE_OPTS="--enable-xrc --enable-graphics_ctx --enable-mediactrl --enable-unicode --disable-optimize --disable-precomp-headers --with-regex=builtin --with-gtk=2 --with-opengl --with-sdl"
	echo $PKGURL | grep neon-0 && LC_CONFIGURE_OPTS="--enable-shared=yes --enable-static=no --with-ssl=openssl"
	echo $PKGURL | grep lzo-2 && LC_CONFIGURE_OPTS="--enable-shared=yes --enable-static=no --disable-static"
	echo $PKGURL | grep harfbuzz && LC_CONFIGURE_OPTS="--with-glib --with-freetype --with-cairo --with-icu --with-gobject" # && cp /usr/lib/i386-linux-gnu/pkgconfig/icu-uc.pc $HOME/$CARCH/lib/pkgconfig/
	echo $PKGURL | grep php-4 && LC_CONFIGURE_OPTS="--with-apxs2=$HOME/$CARCH/bin/apxs --with-mysql=$HOME/$CARCH --with-mysql-sock=$HOME/$CARCH/mysql.sock" 	
	echo $PKGURL | grep php-5 && LC_CONFIGURE_OPTS="--enable-mbstring --with-mysql"
	echo $PKGURL | grep x264 && LC_CONFIGURE_OPTS="--enable-shared"
	echo $PKGURL | grep webkitgtk && LC_CONFIGURE_OPTS="--with-gtk=3.0 --disable-webkit2" # --disable-geolocation --disable-video --disable-web-audio"
	echo $PKGURL | grep libwebp && LC_CONFIGURE_OPTS=" --enable-swap-16bit-csp --enable-experimental --enable-libwebpmux --enable-libwebpdemux --enable-libwebpdecoder --disable-static"
	echo $PKGURL | grep xmoto && LC_CONFIGURE_OPTS="--with-unoptimized=0"
	echo $PKGURL | grep netpbm && export PREFIX=$DIBAB_PREFIX/$MODULE
	echo $PKGURL | grep lshw && export PREFIX=$DIBAB_PREFIX/$MODULE
	echo $PKGURL | grep wireless_tools && export PREFIX=$DIBAB_PREFIX/$MODULE
	echo $PKGURL | grep gutenprint && export DESTDIR=/
	echo $PKGURL | grep cups && LC_CONFIGURE_OPTS="--disable-acl --without-xinetd --enable-texttops --with-menudir=$DIBAB_PREFIX/$MODULE/share/applications --with-icondir=$DIBAB_PREFIX/$MODULE/share/icons --without-php --with-dbusdir=$DIBAB_PREFIX/$MODULE/etc/dbus-1 --with-rcdir=$DIBAB_PREFIX/$MODULE/etc --disable-pam --enable-cups-level3-ppd  --disable-libusb "
	echo $PKGURL | grep fontconfig && [ "$CARCH" = "arm" ] && LC_CONFIGURE_OPTS="--with-arch=$CROSS_PREFIX "
	echo $PKGURL | grep Linux-PAM && LC_CONFIGURE_OPTS="--enable-db=no"
	echo $PKGURL | grep ncurses && export PKG_CONFIG_LIBDIR="$PREFIX/lib/pkgconfig" && LC_CONFIGURE_OPTS="--with-shared --enable-pc-files --without-debug  --enable-pc-files --enable-widec" # && export BUILD_TWICE=yes
	echo $PKGURL | grep glib-networking && LC_CONFIGURE_OPTS="--without-ca-certificates"
  	echo $PKGURL | grep libdrm && LC_CONFIGURE_OPTS="--enable-intel=yes "
  	echo $PKGURL | grep xf86-video-intel && LC_CONFIGURE_OPTS="--disable-dri3 "
	echo $PKGURL | grep gst-plugins-base && LC_CONFIGURE_OPTS="--disable-examples"
	echo $PKGURL | grep udev && export prefix=$DIBAB_PREFIX
	if [ "$CARCH" = "arm" ] 
	then
		echo $PKGURL | grep Mesa && LC_CONFIGURE_OPTS="--disable-opengl" 
		echo $PKGURL | grep xorg-server && LC_CONFIGURE_OPTS="--disable-glx --disable-dri --disable-dri2 --disable-dri3 " 
		# echo $PKGURL | grep tslib && LC_CONFIGURE_OPTS="$LC_CONFIGURE_OPTS --enable-pthres --disable-ucb1x00 --disable-corgi --disable-collie --disable-h3600 --disable-mk712 --disable-arctic2 --enable-input"
		echo $PKGURL | grep udev && LC_CONFIGURE_OPTS="$LC_CONFIGURE_OPTS --disable-introspection --disable-extras"
		echo $PKGURL | grep SDL_ttf && LC_CONFIGURE_OPTS="$LC_CONFIGURE_OPTS  --disable-pulseaudio --disable-video-directfb --disable-esd --disable-video-x11 --without-x"
		echo $PKGURL | grep SDL-1 && LC_CONFIGURE_OPTS="$LC_CONFIGURE_OPTS  --disable-pulseaudio --disable-video-directfb --disable-esd --disable-video-x11 --without-x"
		echo $PKGURL | grep SDL_ttf && LC_CONFIGURE_OPTS="$LC_CONFIGURE_OPTS  --disable-pulseaudio --disable-video-directfb --disable-esd --disable-video-x11 --without-x"
  		export MYPREFIX=$DIBAB_PREFIX/arm/
	else
		echo $PKGURL | grep SDL-1 && LC_CONFIGURE_OPTS="$LC_CONFIGURE_OPTS  -disable-nasm --enable-alsa --with-x --disable-rpath --disable-static"
		echo $PKGURL | grep xorg-server && LC_CONFIGURE_OPTS="--enable-composite --enable-dri2 --enable-glx --enable-aiglx --with-log-dir=$DIBAB_PREFIX/var/log" 
	fi
	echo $PKGURL | grep sqlite && export AM_CPPFLAGS="-DSQLITE_ENABLE_UNLOCK_NOTIFY -DSQLITE_SECURE_DELETE"
	echo $PKGURL | grep sqlite || unset AM_CPPFLAGS
	echo $PKGURL | grep ghostscript && export CPPFLAGS="$CPPFLAGS -Ijpeg/ -Ilibpng -I./freetype/include/freetype" # -I$HOME/$CARCH/include/freetype $CPPFLAGS"
	echo $PKGURL | grep zlib && unset LC_CONFIGURE_OPTS && LCPKGURL_CHOICE=installfromsrc db-lcarchive $HOME/ydfs/tarballs/`basename $PKGURL` && continue
